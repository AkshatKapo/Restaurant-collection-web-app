{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/Services/Services/restaurant.service\";\nexport class AddRestaurantsComponent {\n  constructor(fb, restaurant_service) {\n    this.fb = fb;\n    this.restaurant_service = restaurant_service;\n    this.addRestaurantForm = this.fb.group({\n      restaurant_Name: ['', Validators.required],\n      location: ['', Validators.required],\n      food: ['', Validators.required],\n      rate: [0, [Validators.required, Validators.min(0), Validators.max(5)]]\n    });\n  }\n  // Basically fb.group is used to create form group with the specified controls, this.addRestaurantForm is used to \n  // hold the formcontrols. When the user add info the the text user adds stores in \n  ngOnInit() {}\n}\nAddRestaurantsComponent.ɵfac = function AddRestaurantsComponent_Factory(t) {\n  return new (t || AddRestaurantsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.RestaurantService));\n};\nAddRestaurantsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddRestaurantsComponent,\n  selectors: [[\"app-add-restaurants\"]],\n  decls: 2,\n  vars: 0,\n  template: function AddRestaurantsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"add-restaurants works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AASnE,OAAM,MAAOC,uBAAuB;EAIlCC,YAAoBC,EAAc,EAAUC,kBAAoC;IAA5D,OAAE,GAAFD,EAAE;IAAsB,uBAAkB,GAAlBC,kBAAkB;IAE3D,IAAI,CAACC,iBAAiB,GAAC,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MACpCC,eAAe,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MAC1CC,QAAQ,EAAE,CAAC,EAAE,EAAET,UAAU,CAACQ,QAAQ,CAAC;MACnCE,IAAI,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACQ,QAAQ,CAAC;MAC/BG,IAAI,EAAE,CAAC,CAAC,EAAE,CAACX,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACY,GAAG,CAAC,CAAC,CAAC,EAAEZ,UAAU,CAACa,GAAG,CAAC,CAAC,CAAC,CAAC;KACtE,CAAC;EAED;EACA;EACA;EAEAC,QAAQ,IAET;;AAnBSb,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAc;EAAAC;EAAAC;EAAAC;IAAA;MCVpCC,yBAAG;MAAAA,sCAAsB;MAAAA,iBAAI","names":["Validators","AddRestaurantsComponent","constructor","fb","restaurant_service","addRestaurantForm","group","restaurant_Name","required","location","food","rate","min","max","ngOnInit","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\aksha\\OneDrive\\Desktop\\Projects\\Restaurant_Collection\\ClientApp\\src\\app\\Components\\AddRestaurants\\add-restaurants\\add-restaurants.component.ts","C:\\Users\\aksha\\OneDrive\\Desktop\\Projects\\Restaurant_Collection\\ClientApp\\src\\app\\Components\\AddRestaurants\\add-restaurants\\add-restaurants.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Restaurant } from 'src/app/Interfaces/restaurant';\nimport { RestaurantService } from 'src/app/Services/Services/restaurant.service';\n\n@Component({\n  selector: 'app-add-restaurants',\n  templateUrl: './add-restaurants.component.html',\n  styleUrls: ['./add-restaurants.component.css']\n})\nexport class AddRestaurantsComponent implements OnInit {\n\n  addRestaurantForm:FormGroup;// property of Formgroup use to hold and manage the form controls \n\n  constructor(private fb:FormBuilder, private restaurant_service:RestaurantService){// fb is the instance of Formbuilder class\n\n     this.addRestaurantForm=this.fb.group({ // creates the form group with specified controls \n      restaurant_Name: ['', Validators.required],\n      location: ['', Validators.required],\n      food: ['', Validators.required],\n      rate: [0, [Validators.required, Validators.min(0), Validators.max(5)]]\n    });\n\n     }\n     // Basically fb.group is used to create form group with the specified controls, this.addRestaurantForm is used to \n     // hold the formcontrols. When the user add info the the text user adds stores in \n\n     ngOnInit(): void {\n      \n    }\n    \n\n  }\n \n\n\n\n  \n\n\n","<p>add-restaurants works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}