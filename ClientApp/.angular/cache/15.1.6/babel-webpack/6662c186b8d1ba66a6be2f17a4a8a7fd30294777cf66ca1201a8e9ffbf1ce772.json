{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/Services/Services/restaurant.service\";\nimport * as i3 from \"@angular/router\";\nexport class AddRestaurantsComponent {\n  constructor(fb, restaurant_service, router) {\n    this.fb = fb;\n    this.restaurant_service = restaurant_service;\n    this.router = router;\n  } // fb is the instance of Formbuilder class\n  // Basically fb.group is used to create form group with the specified controls, this.addRestaurantForm is used to \n  // hold the formcontrols. When the user add info the the text user adds stores in addRestuarantForm \n  ngOnInit() {\n    this.addRestaurantForm = this.fb.group({\n      restaurant_Name: ['', Validators.required],\n      location: ['', Validators.required],\n      food: ['', Validators.required],\n      rate: [0, [Validators.required, Validators.min(0), Validators.max(5)]]\n    });\n  }\n  onSubmit() {\n    this.restaurant_service.AddRestaurants(this.addRestaurantForm.value).subscribe(data => {\n      this.router.navigate(['/show-restaurant']); // If the request is sucessful it navigates to the restaurant list page \n    });\n  }\n}\n\nAddRestaurantsComponent.ɵfac = function AddRestaurantsComponent_Factory(t) {\n  return new (t || AddRestaurantsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.RestaurantService), i0.ɵɵdirectiveInject(i3.Router));\n};\nAddRestaurantsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddRestaurantsComponent,\n  selectors: [[\"app-add-restaurants\"]],\n  decls: 18,\n  vars: 1,\n  consts: [[1, \"Addrestaurant\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"restaurant_Name\"], [\"type\", \"text\", \"id\", \"restaurant_Name\", \"formControlName\", \"restaurant_Name\", \"placeholder\", \"Name of the restaurant\"], [\"for\", \"location\"], [\"type\", \"text\", \"id\", \"location\", \"formControlName\", \"location\", \"placeholder\", \"location\"], [\"for\", \"food\"], [\"type\", \"text\", \"id\", \"food\", \"formControlName\", \"food\", \"placeholder\", \"Food\"], [\"for\", \"rate\"], [\"type\", \"text\", \"id\", \"rate\", \"formControlName\", \"rate\"]],\n  template: function AddRestaurantsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AddRestaurantsComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n      i0.ɵɵtext(4, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 2)(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Location:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 2)(11, \"label\", 7);\n      i0.ɵɵtext(12, \"Food:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 2)(15, \"label\", 9);\n      i0.ɵɵtext(16, \"Rate:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 10);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.addRestaurantForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAUnE,OAAM,MAAOC,uBAAuB;EAIlCC,YAAoBC,EAAc,EAAUC,kBAAoC,EAAUC,MAAa;IAAnF,OAAE,GAAFF,EAAE;IAAsB,uBAAkB,GAAlBC,kBAAkB;IAA4B,WAAM,GAANC,MAAM;EAAS,CAAC;EACvG;EACA;EAEAC,QAAQ;IACP,IAAI,CAACC,iBAAiB,GAAC,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MACnCC,eAAe,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ,CAAC;MAC1CC,QAAQ,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACU,QAAQ,CAAC;MACnCE,IAAI,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACU,QAAQ,CAAC;MAC/BG,IAAI,EAAE,CAAC,CAAC,EAAE,CAACb,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACc,GAAG,CAAC,CAAC,CAAC,EAAEd,UAAU,CAACe,GAAG,CAAC,CAAC,CAAC,CAAC;KACtE,CAAC;EAEJ;EACAC,QAAQ;IACN,IAAI,CAACZ,kBAAkB,CAACa,cAAc,CAAC,IAAI,CAACV,iBAAiB,CAACW,KAAK,CAAC,CAACC,SAAS,CAACC,IAAI,IAAE;MACnF,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC;EAEF;;;AAtBOpB,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXpCC,8BAA2B;MACeA;QAAA,OAAYC,cAAU;MAAA,EAAC;MACzDD,8BAAwB;MACSA,qBAAK;MAAAA,iBAAQ;MAC1CA,2BAAiH;MACrHA,iBAAM;MAINA,8BAAwB;MACEA,yBAAS;MAAAA,iBAAQ;MACvCA,2BAAqF;MACzFA,iBAAM;MAKNA,+BAAwB;MACFA,sBAAK;MAAAA,iBAAQ;MAC/BA,4BAAyE;MAC7EA,iBAAM;MAGNA,+BAAwB;MACFA,sBAAK;MAAAA,iBAAQ;MAC/BA,6BAAsD;MAE1DA,iBAAM;;;MA1BJA,eAA+B;MAA/BA,iDAA+B","names":["Validators","AddRestaurantsComponent","constructor","fb","restaurant_service","router","ngOnInit","addRestaurantForm","group","restaurant_Name","required","location","food","rate","min","max","onSubmit","AddRestaurants","value","subscribe","data","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\aksha\\OneDrive\\Desktop\\Projects\\Restaurant_Collection\\ClientApp\\src\\app\\Components\\AddRestaurants\\add-restaurants\\add-restaurants.component.ts","C:\\Users\\aksha\\OneDrive\\Desktop\\Projects\\Restaurant_Collection\\ClientApp\\src\\app\\Components\\AddRestaurants\\add-restaurants\\add-restaurants.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Route, Router } from '@angular/router';\nimport { Restaurant } from 'src/app/Interfaces/restaurant';\nimport { RestaurantService } from 'src/app/Services/Services/restaurant.service';\n\n@Component({\n  selector: 'app-add-restaurants',\n  templateUrl: './add-restaurants.component.html',\n  styleUrls: ['./add-restaurants.component.css']\n})\nexport class AddRestaurantsComponent implements OnInit {\n\n  addRestaurantForm!:FormGroup;// property of Formgroup use to hold and manage the form controls \n\n  constructor(private fb:FormBuilder, private restaurant_service:RestaurantService, private router:Router){}// fb is the instance of Formbuilder class\n     // Basically fb.group is used to create form group with the specified controls, this.addRestaurantForm is used to \n     // hold the formcontrols. When the user add info the the text user adds stores in addRestuarantForm \n\n     ngOnInit(): void {\n      this.addRestaurantForm=this.fb.group({ // creates the form group with specified controls \n        restaurant_Name: ['', Validators.required],// key and value pair \n        location: ['', Validators.required],\n        food: ['', Validators.required],\n        rate: [0, [Validators.required, Validators.min(0), Validators.max(5)]]\n      });\n      \n    }\n    onSubmit(){\n      this.restaurant_service.AddRestaurants(this.addRestaurantForm.value).subscribe(data=>{// sends POST request to http which contains the form control key-pair\n        this.router.navigate(['/show-restaurant']);// If the request is sucessful it navigates to the restaurant list page \n      })\n        \n      }\n    }\n    \n\n  \n \n\n\n\n  \n\n\n","<div class=\"Addrestaurant\">\n    <form [formGroup]=\"addRestaurantForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n            <label for=\"restaurant_Name\">Name:</label>\n            <input type=\"text\" id=\"restaurant_Name\" formControlName=\"restaurant_Name\" placeholder=\"Name of the restaurant\" />\n        </div>\n    \n\n   \n        <div class=\"form-group\">\n            <label for=\"location\">Location:</label>\n            <input type=\"text\" id=\"location\" formControlName=\"location\" placeholder=\"location\" />\n        </div>\n\n\n\n   \n        <div class=\"form-group\">\n            <label for=\"food\">Food:</label>\n            <input type=\"text\" id=\"food\" formControlName=\"food\" placeholder=\"Food\" />\n        </div>\n\n    \n        <div class=\"form-group\">\n            <label for=\"rate\">Rate:</label>\n            <input type=\"text\" id=\"rate\" formControlName=\"rate\" />\n\n        </div>\n\n        </form>\n\n\n        \n     \n\n</div>\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}